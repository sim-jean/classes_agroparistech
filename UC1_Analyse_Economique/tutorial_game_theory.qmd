---
title: "Théorie des jeux et économie industrielle"
subtitle: "UC1 - Analyse économique"
---

```{=html}
<style>
  body { display: none; }
</style>
<script>
  var password = prompt("Enter password:");
  if (password === "super_secret_password") {
    document.body.style.display = "block";
  } else {
    document.body.innerHTML = "<h1>Access Denied</h1><p>Incorrect password.</p>";
    document.body.style.display = "block";
  }
</script>
```

# I. Rappel des concepts importants

## Rappels

::: incremental
-   Jeux simultanés ou séquentiels
    -   Représentation **normale** : pour les jeux à 2 joueurs, et un espace de stratégies finies, en *bimatrice*
    -   Représentation **extensive** : arbre de décision
    -   Représentation en meilleures réponses : on a les fonctions qui déterminent les stratégies des joueurs
-   Concepts d'équilibre
    -   **Equilibre de Nash** : allocation où les joueurs n'ont pas intérêt à changer de stratégie de façon **unilatérale**
    -   **Equilibre parfait en sous-jeu** : raffinement de l'équilibre de Nash, il implique que
:::

## Rappels et outline

::: incremental
-   Types de solutions :
    -   Fonctions de meilleure réponse
    -   Détermination des stratégies dominantes/dominées
    -   Induction à rebours
:::

[Aujourd'hui, le programme:]{.fragment}

::: incremental
-   Jeux simultanés : équilibre de Nash, forme normale
-   Jeux séquentiels :
-   Jeux répétés :
-   Duopoles: cas d'étude
:::

# I. Jeux simultanés

## Entreprises polluantes et régulation

::: {.incremental style="font-size:90%"}
-   Deux companies, A & B, sont dans une industrie en passe d'être plus régulée. Chaque entreprise a deux choix :
    -   Investir dans une technologie plus verte (**I**): cela représente un coût, mais améliore la performance environnementale, l'image publique, et réduit ainsi les probabilité de régulation du secteur
    -   Continuer avec la technologie polluante (**C**): pas de coût, mais augmente le risque de régulation
-   Payoff :
    -   Si les deux investissent, réduisent bien le risque de régulation, et ce qui couvre les coûts: $(3,3)$
    -   Si l'un des deux seulement investit, il gagne un avantage compétitif en étant identifié comme plus soutenable, mais l'autre entreprise risque gros : $(4,1)$
    -   Si aucun des deux n'investit, les coûts ne sont pas payés, mais il y a un risque accru de régulation : $(1.5, 1.5)$
:::

## Entreprises polluantes et régulation

**A corriger**

-   Ecrivez le jeu en forme normale

::: fragment
```{r}

# Load required libraries
library(knitr)
library(kableExtra)

# Define the payoff matrix as a data frame for display
payoff_matrix <- data.frame(
  "Firme 2" = c("Firme 1:Investir", "Firme 1: Continuer"),
  "Firme 1: Investir" = c("(3,3)", "(1,4)"),
  "Firme 1: Continuer" = c("(4,1)", "(1.5,1.5)")
)

# Display the payoff matrix with kable
payoff_matrix %>%
  kable("html", escape = F, col.names = c("", "Firme 2: Investir", "Firme 2: Continuer")) %>%
  kable_styling(full_width = F, position = "center")

```
:::

## Entreprises polluantes et régulation

-   Quels sont les choix de l'entreprise B?

::: fragment
```{r}

payoff_matrix %>%
  kable("html", escape = F, col.names = c("", "Firme 2: Investir", "Firme 2: Continuer")) %>%
  row_spec(2, background = "#f0f0f0", color = "#d0d0d0") %>%
  kable_styling(full_width = F, position = "center")


```
:::

::: fragment
```{r}

payoff_matrix %>%
  kable("html", escape = F, col.names = c("", "Firme 2: Investir", "Firme 2: Continuer")) %>%
  row_spec(1, background = "#f0f0f0", color = "#d0d0d0") %>%
  kable_styling(full_width = F, position = "center")

```
:::

[C'est donc la stratégie **d'investir** qui est *dominante*]{.fragment}

## Entreprises polluantes et régulation

-   Quels sont les choix de l'entreprise A?

::: fragment
```{r}

payoff_matrix %>%
  kable("html", escape = F, col.names = c("","Firme 2: Investir", "Firme 2: Continuer"))%>%
  column_spec(2, background = "#f0f0f0", color = "#d0d0d0") %>%
  kable_styling(full_width = F, position = "center")



```
:::

::: fragment
```{r}

payoff_matrix %>%
  kable("html", escape = F, col.names = c("", "Firme 2: Investir", "Firme 2: Continuer"))%>%
  column_spec(3, background = "#f0f0f0", color = "#d0d0d0") %>%
  kable_styling(full_width = F, position = "center")

```
:::

[C'est donc la stratégie **d'investir** qui est *dominante*]{.fragment}

## Entreprises polluantes et régulation

On a donc les stratégies dominantes suivantes :

```{r}
payoff_matrix %>%
  kable("html", escape = F, col.names = c("","Firme 2: Investir", "Firme 2: Continuer")) %>%
  row_spec(1, color = "black", background = "lightgreen") %>% # Highlight Player 1's dominant strategy (B)
  column_spec(2, color = "black", background = "red") %>% # Highlight Player 2's dominant strategy (A)
  kable_styling(full_width = F, position = "center")
```

L'équilibre de Nash est (i) unique, et (ii) optimal (le bien être collectif est maximal)

::: fragment
Ce n'est pas toujours le cas! Les équilibres sont souvent sous-optimaux.
:::

## Accord environmental

Le Brésil et l'Union Européenne essaient de former un accord bilatéral pour des standards environnementaux de production. Chacun ont deux options:

::: {.incremental style="font-size:90%"}
-   Appliquer des standards élevés : cela implique des normes environnementales coûteuses, mais qui réduisent les pollutions
-   Applique des standards bas : les coûts demeurent bas, mais la pollution est plus importante
-   Payoffs :
    -   Si les deux mettent des standards élevés, les coûts sont importants mais la pollution est limitée: $(4,4)$
    -   Si le Brésil applique des standards élevés, mais pas l'UE, la pollution se répend, n'est pas très limitée, les coûts sont élevés pour le Brésil $(-1,0)$
    -   Si les deux optent pour des standards bas, pollution importante mais coûts limités: $(1,1)$
:::

## Accord environmental

-   Représentez le jeu en forme normale

::: fragment
```{r}
# Load required libraries
library(knitr)
library(kableExtra)

# Define the payoff matrix as a data frame
payoff_matrix <- data.frame(
  "Brésil" = c("Standards élevés(C)", "Standards Faibles (D)"),
  "UE: Standards élevés(C)" = c("(4,4)", "(0,-1)"),
  "UE: Standards faibles (D)" = c("(-1,0)", "(1,1)")
)

# Display the payoff matrix with kable
payoff_matrix %>%
  kable("html", escape = F, col.names = c("", "Standards élevés (C)", "Standards Faibles (D)")) %>%
  kable_styling(full_width = F, position = "center") %>%
  add_header_above(c(" " = 1, "Stratégie du Brésil" = 2))

```
:::

## Dumping environmental

-   Où sont le(s) équilibre(s) de Nash?

::: fragment
```{r}
# Highlight best responses:
# - For UE: Highest payoff in each column (3 and 1)
# - For Brésil: Highest payoff in each row (3 and 2

payoff_matrix <- data.frame(
  "Brésil" = c("Standards élevés (C)", "Standards faibles (D)"),
  "UE: Standards élevés (C)" = c(
    cell_spec("(4,4)", , background = "red"),
    "(-1,0)"# Highlight second row, second column
  ),
  "UE: Standards faibles (D)" = c(
    "(0,-1)",  # Highlight first row, third column
     cell_spec("(1,1)", background = "red")
  )
)

# Display the payoff matrix
payoff_matrix %>%
  kable("html", escape = F, col.names = c("", "Brésil: Standards élevés (C)", "Brésil: Standards faibles (D)")) %>%
  kable_styling(full_width = F, position = "center") %>%
  add_header_above(c(" " = 1, "Stratégies du Brésil" = 2))
```
:::

::: incremental
-   Pas de stratégie dominante
-   Mais 2 équilibres de Nash :
    -   On a du mal à "choisir"
:::

# Jeux séquentiels

## Jeux séquentiels 1 - Induction à rebours

Prenez deux firmes Alpha et Beta, qui enchérissent de façon récursive pour l'obtention d'une licence d'exploitation. La firme A décide en premier, et la firme B réagit. Le jeu consiste en 3 rounds:

::: {.incremental style="font-size:90%"}
-   Round 1 : Alpha décide :
    -   Enchère basee : passer au tour suivant
    -   Enchère haute : A gagne d'un coup : $A,B = (4,1)$
-   Round 2 : décision de Beta si Alpha a choisi une faible enchère
    -   Enchère basse : passer au tour suivant
    -   Enchère haute : Beta gagne le contrat avec $A,B= (1,4)$
-   Round 3 : décision finale de Alpha, si les deux enchères d'avant étaient basses
    -   Enchère basse : personne ne gagne et $A,B=(0,0)$
    -   Enchère haute : Alpha gagne mais doit partager avec Beta le contrat, $A,B=(3,2)$
:::

## Jeux séquentiels 1 - Induction à rebours

Utilisez *l'induction à rebours* pour trouver les équilibre(s) parfait(s) en sous-jeux

::: incremental
-   Au round 3 : A choisira de miser *haut*, donc le payoff est de $(3,2)$
-   Au round 2 : B peut choisir entre $(3,2)$ (en misant bas) et $(1,4)$ <br> [Il choisit donc $(1,4)$ et joue (haut)]{.fragment}
-   Au round 1 : A sait que B jouera (haut) donc il a le choix entre $(1,4)$ et $(4,1)$<br> [Il choisit donc (haut)]{.fragment}
-   L'équilibre parfait en sous jeux est *(haut, (haut,bas), (haut,bas))*
:::

## Jeux séquentiels 2 - Accord environnemental séquentiel

*Les équilibres parfaits en sous-jeux - et les équilibres de Nash*

::: incremental
-   On reprend le cadre du jeu des accords
-   On ne sait pas à quoi mènera l'équilibre de Nash. C'est embêtant.
-   On voudrait pouvoir trouver un moyen de converger vers celui qui est le mieux
-   Et on voudrait savoir si le **timing** des décisions peut aider
-   Enfin, on illustre ici que les équilibres parfaits en sous-jeux sont des sous-ensembles des équilibres de Nash
:::

## Jeux séquentiels 2 - Accord environnemental séquentiel

```{r}
loc__ = F

if(loc__ == T){
  library(DiagrammeR)
library(DiagrammeRsvg)
library(rsvg)

graph_ = grViz("
digraph decision_tree {
  graph [layout = dot, rankdir = LR]
  
  # Node settings
  node [shape = ellipse, style = filled, color = lightgrey, fontname = 'Arial']
  
  # Nodes
  UE [label = 'UE']
  Br1 [label = 'Brésil']
  Br2 [label = 'Brésil']
  Payoff1 [label = '(4,4)', shape = ellipse, color = white, fontname = 'Arial']
  Payoff2 [label = '(-1,0)', shape = ellipse, color = white, fontname = 'Arial']
  Payoff3 [label = '(1,1)', shape = ellipse, color = white, fontname = 'Arial']
  Payoff4 [label = '(0,-1)', shape = ellipse, color = white, fontname = 'Arial']
  
  # Edges
  UE -> Br1 [label = 'Standard élevé', fontname = 'Arial']
  UE -> Br2 [label = 'Standard bas', fontname = 'Arial']
  Br1 -> Payoff1 [label = 'Standard élevé', fontname = 'Arial']
  Br1 -> Payoff2 [label = 'Standard bas', fontname = 'Arial']
  Br2 -> Payoff4 [label = 'Standard élevé', fontname = 'Arial', labelloc = b, labeldistance = 2]
  Br2 -> Payoff3 [label = 'Standard bas', fontname = 'Arial']
}
")

svg_code <- export_svg(graph_)

# Save as a PNG
rsvg_png(charToRaw(svg_code), file = 'images/extensive_form_accord.png')
}

#graph_


```

![Forme extensive](C:/Users/jean/OneDrive/Desktop/Teaching/AgroParisTech/classes_agroparistech/images/extensive_form_accord.png)

## Jeux séquentiels 3 : entrée ou non

*Les équilibres parfaits en sous-jeux - et les équilibres de Nash*

::: incremental
-   Une firme A doit choisir ou non de rentrer sur un marché où est la firme B:
    -   Si la firme A n'entre pas, elle n'a rien et la firme B reste en monopole: $(0,50)$
    -   Si la firme $A$ entre et que la firme $B$ ne fait rien : $(10,20)$
    -   Si la firme $A$ entre que la firme $B$ se venge : $(-10,10)$
-   Ecrivez le jeu sous forme normale:
:::

::: fragment
```{r}
payoff_matrix <- data.frame(
  "Firme 2" = c("Firme 1: entrer", "Firme 1: ne pas entrer"),
  "Firme 1: Entrer" = c("(-10,10)", "(0,50)"),
  "Firme 1: ne pas entrer" = c("(10,20)", "(0,50)")
)

# Display the payoff matrix with kable
payoff_matrix %>%
  kable("html", escape = F, col.names = c("", "Firme 2: réaction", "Firme 2: pas de réaction")) %>%
  kable_styling(full_width = F, position = "center")
```
:::

## Jeux séquentiels 3 : entrée ou non

Où sont les équilibres de Nash?

::: fragment
```{r}
library(dplyr)
payoff_matrix <- data.frame(
  "Firme 2" = c("Firme 1: entrer", "Firme 1: ne pas entrer"),
  "Firme 1: Entrer" = c("(-10,10)", cell_spec("(0,50)", "html", background = "lightblue")),
  "Firme 1: ne pas entrer" = c(cell_spec("(10,20)", "html", background = "lightblue"),
                               cell_spec("(0,50)", "html", background = "white"))
)

# Affichage de la matrice avec kable
payoff_matrix %>%
  kable("html", escape = F, col.names = c("", "Firme 2: réaction", "Firme 2: pas de réaction")) %>%
  kable_styling(full_width = F, position = "center")
```
:::

::: fragment
```{r}
payoff_matrix <- data.frame(
  "Firme 2" = c("Firme 1: entrer", "Firme 1: ne pas entrer"),
  "Firme 1: Entrer" = c("(-10,10)", cell_spec("(0,50)", "html", background = "pink")),
  "Firme 1: ne pas entrer" = c(cell_spec("(10,20)", "html", background = "pink"),
                               cell_spec("(0,50)", "html", background = "pink"))
)

# Affichage de la matrice avec kable
payoff_matrix %>%
  kable("html", escape = F, col.names = c("", "Firme 2: réaction", "Firme 2: pas de réaction")) %>%
  kable_styling(full_width = F, position = "center")
```
:::

::: fragment
```{r}
payoff_matrix <- data.frame(
  "Firme 2" = c("Firme 1: entrer", "Firme 1: ne pas entrer"),
  "Firme 1: Entrer" = c("(-10,10)", cell_spec("(0,50)", "html", background = "red")),
  "Firme 1: ne pas entrer" = c(cell_spec("(10,20)", "html", background = "red"),
                               cell_spec("(0,50)", "html", background = "white"))
)

# Affichage de la matrice avec kable
payoff_matrix %>%
  kable("html", escape = F, col.names = c("", "Firme 2: réaction", "Firme 2: pas de réaction")) %>%
  kable_styling(full_width = F, position = "center")
```
:::

## Jeux séquentiels 3 : entrée ou non?

```{r}
if(loc__ ){
  
  graph_ = grViz("
  digraph G {
    graph [layout = dot, rankdir = TB]
    
    # Set global font to Arial
    node [fontname = 'Arial']
    edge [fontname = 'Arial']
    
    # Nodes
    A [label = 'Firm A', shape = plaintext]  // Firm A with no shape
    A_no [label = 'No Entry\n(0, 50)', shape = ellipse, style = filled, fillcolor = lightgrey]
    A_enter [label = 'Enter', shape = ellipse, style = filled, fillcolor = lightgrey]
    B_do_nothing [label = 'Firm B does Nothing\n(10, 20)', shape = ellipse, style = filled, fillcolor = lightgrey]
    B_revenge [label = 'Firm B Retaliates\n(-10, 10)', shape = ellipse, style = filled, fillcolor = lightgrey]
    
    # Edges
    A -> A_no [label = 'No']
    A -> A_enter [label = 'Enter']
    A_enter -> B_do_nothing [label = 'Do Nothing']
    A_enter -> B_revenge [label = 'Retaliate']
  }
")
  svg_code <- export_svg(graph_)

# Save as a PNG
  rsvg_png(charToRaw(svg_code), file = 'images/extensive_form_entry.png')

}

```

![Forme extensive](C:/Users/jean/OneDrive/Desktop/Teaching/AgroParisTech/classes_agroparistech/images/extensive_form_entry.png)

## Jeux séquentiels 3 : entrée ou non?

::: incremental
-   Quels sont les équilibres parfaits en sous jeux
    -   Induction à rebours
    -   Si A entre, B n'a pas intérêt à réagir, donc le payoff est $(10,20)$
    -   Pour A, soit il reste dehors $(0,50)$, soit il entre sans réaction $(10,20)$
    -   L'équilibre parfait en sous jeu est donc *(entrée, pas de réaction)*
:::

## Jeux séquentiels 4 - Les pirates

*Objectif : Induction à rebours : c'est important*

On va résoudre le **jeu des pirates** :

::: {.incremental style="font-size:90%"}
-   On a 5 pirates, notés de A à E, par ordre de force
-   Ils arrivent sur une île déserte, et y trouvent 100 pièces d'or
-   Le plus fort des pirates propose une répartition des pièces entre les pirates :
    -   Si une majorité stricte est contre, on le tue (majorité faible, ça passe) <br> [Le pirate suivant propose une répartition]{.fragment}
    -   Sinon, la répartition est adoptée <br> [Le jeu est terminé]{.fragment}
-   On suppose qu'ils sont :
    -   **rationnels** : ils veulent maximiser leur nombre de pièces, et préfèrent être pauvres que morts
    -   **pas gratuitement cruels** : ils ne choisissent une alternative *que* si elle leur rapporte plus de pièces
:::

## Jeux séquentiels 4 - Les pirates

::: {.incremental style="font-size:90%"}
-   Supposez que les 3 premiers pirates sont morts : quelle est la solution adoptée et l'équilibre de Nash?
    -   E doit tout accepter, donc D propose *(100, 0)*
-   Supposez qu'il reste 3 pirates
    -   C sait que D va offrir 0 à E
    -   C, pour éviter de mourir, offrira 1\>0 à E, qui valfffide la répartition
    -   C propose donc *(99,0,1)*
-   Supposez qu'il reste 4 pirates
    -   Il faut au moins 2 votes
    -   Il sait que C refusera tout ce qui est inférieur à 99, E tout ce qui est inférieur à 1
    -   Il a donc intérêt à proposer à D une pièce
    -   Ce qui donne *(99, 0, 1, 0)*
:::

## Jeux séquentiels 4 : les pirates

::: incremental
-   Donnez la solution du jeu à 5 pirates
    -   A a besoin de deux voix en plus.
    -   La voix de B "coûte" 100: pas possible
    -   La voix de C "coûte" 1
    -   La voix de D coûte 2
    -   La voix de E coûte 1
    -   Il peut offrir une pièce à B et E et s'assurer de leurs voix
    -   La répartition est donc *(98,0,1,0,1)*
-   Résultat contre-intuitif :
    -   La rationalité seule n'explique pas vos idées : les normes sociales aussi
    -   Il faut cependant la pousser pour comprendre le résultat!
:::

# Duopole

## Exercice de duopole

On prend encore deux entreprises, A et B. La fonction de demande inverse est $P(Q) = a-bQ$. Les coûts de production sont $CT(q_i)=c_iq_i$

:::: incremental
-   Exprimez la fonction de profit <br> [$\Pi_i(q_i, q_j) = (a - b(q_i+q_j))q_i - c_i q_i$]{.fragment}
-   A partir de l'équation de profit, trouvez les fonctions de réaction des deux entreprises. <br>

::: fragment
$$
  \begin{align}
  \frac{\partial \Pi_i}{\partial q_i}= a - 2bq_i - bq_j - c &= 0\\
  &\Rightarrow q_i(q_j) &= \frac{a - c_i - bq_j}{2b}
  \end{align}
  $$
:::
::::

## Exercice de duopole

::::: {.incremental style="font-size:80%"}
-   Déterminez le point d'équilibre du duopole, ainsi que les profits des deux entreprises <br>

::: fragment
$$
\begin{align}
q_A &= \frac{a-c_A}{3b}\\
q_B &= \frac{a-c_A}{3b}
\end{align}
$$
:::

-   Déterminez le prix d'équilibre et le profit de chaque entreprise en supposant que $c_A = c_B = c$

::: fragment
$$
\begin{align}
p = \frac{a+2c}{3}\\
\Pi = \frac{(a-c)^2}{9}
\end{align}
$$
:::
:::::

## Exercice de duopole

Maintenant, supposez que l'entreprise $A$ est leader, et la firme $B$ est suiveuse. Comment trouver l'équilibre?

::::: {.incremental style="font-size:60%"}
-   Premièrement, on peut reprendre la même fonction de réaction et l'intégrer dans le profit de l'entreprise $A$:

::: fragment
$$ \Pi_A = \left(a -c - b \left( q_A + \frac{a-c-bq_A}{2b }\right)\right)q_A$$
:::

-   On peut donc trouver la quantité qui maximise le profit : $$
    \begin{align}
    \Pi_A' = 0 \iff \left(a -c - \left(2bq_A + b\frac{a - c - 2bq_A}{2b}\right)\right) &= 0\\
    \Rightarrow q_A &= \frac{a-c}{2b}
    \end{align}
    $$

-   Et en déduire la quantité produite par B

::: fragment
$$
q_B = \frac{a-c}{4b}
$$
:::
:::::

## Exercice de duopole

On peut comparer les quantités et profits avec $a= 10$, $b=1$, $c=2$

```{r, echo = F}
library(ggplot2)
values = c() 
a = 10
b = 1
c = 2

# Compute values in Cournot
qAC =(a-c)/3
qBC = qAC
PiAc = (a - b*(qAC + qBC))*qAC-c*qAC
PiBc = PiAc
# Compute values in Stackelberg
qAS = (a-c)/(2*b)
qBS = (a - c)/(4*b) 
P = (a - b*(qAS + qBS))
PiAS = (P-c)*qAS
PiBS = (P-c)*qBS

values = c(qAC, qAS, PiAc, PiAS, qBC, qBS, PiBc, PiBS)
names = rep(c('Q Cournot', 'Q Stackelberg', "Profit Cournot", "Profit Stackelberg"),2)
marker = c("A", "A", "A", "A", "B", "B", "B", "B")

data = data.frame(values, 
                  names, 
                  marker)

data %>%
  ggplot(aes(x = names, y = values, fill = marker))+
  geom_bar(stat = "identity", position = "stack")+
  theme_minimal()+
  ylab(" ")+
  xlab(" ")+
  labs(fill = "Firm")+
  scale_fill_manual(values = c('dodgerblue', 'firebrick'))



```

## Collusion

Les deux firmes ont-elles intérêt à opérer une collusion?

::: {.incremental style="font-size:70%"}
-   Si la moitié du profit de monopole est supérieur au profit de concurrence en Cournot
-   Quel est le profit de monopole? <br> [$$Pi = (a-c-bQ)Q$$]{.fragment}
-   Quelle est la production optimale? <br> [$$a-c-2bQ=0 \Rightarrow Q = \frac{a-c}{2b}$$]{.fragment}
-   Quel est le niveau de profit? <br> [$$P=\frac{a+c}{2} \Rightarrow \Pi = \frac{(a-c)^2}{4}$$]{.fragment}
-   Donc le profit individiuel de chaque firme est : <br> [$$\Pi_A = \Pi_B = \frac{(a-c)^2}{8}>\frac{(a-c)^2}{9}$$]{.fragment}
:::
